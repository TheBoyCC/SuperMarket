-- MySQL Script generated by MySQL Workbench
-- Sun Jan 12 17:28:41 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema pos
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema pos
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pos` DEFAULT CHARACTER SET latin1 ;
USE `pos` ;

-- -----------------------------------------------------
-- Table `pos`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`role` (
  `role_id` INT(11) NOT NULL AUTO_INCREMENT,
  `role` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`user` (
  `user_id` INT(11) NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(20) NOT NULL,
  `last_name` VARCHAR(20) NOT NULL,
  `gender` VARCHAR(7) NOT NULL,
  `date_of_birth` DATE NOT NULL,
  `date_of_employment` DATE NULL DEFAULT NULL,
  `role_id` INT(11) NOT NULL,
  `phone_number` VARCHAR(15) NOT NULL,
  `address` VARCHAR(100) NULL DEFAULT NULL,
  `picture` LONGBLOB NULL DEFAULT NULL,
  `status` BIT(1) NULL DEFAULT b'1',
  `modified_date` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`user_id`),
  INDEX `RefROLE6` (`role_id` ASC) VISIBLE,
  CONSTRAINT `user_role_role_id_fk`
    FOREIGN KEY (`role_id`)
    REFERENCES `pos`.`role` (`role_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`account` (
  `account_id` INT(11) NOT NULL AUTO_INCREMENT,
  `user_id` INT(11) NOT NULL,
  `username` VARCHAR(20) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `role_id` INT(11) NOT NULL,
  `status` BIT(1) NOT NULL DEFAULT b'1',
  `modified_date` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`account_id`),
  UNIQUE INDEX `account_username_uindex` (`username` ASC) VISIBLE,
  INDEX `account_role_role_id_fk` (`role_id` ASC) VISIBLE,
  INDEX `account_user_user_id_fk` (`user_id` ASC) VISIBLE,
  CONSTRAINT `account_role_role_id_fk`
    FOREIGN KEY (`role_id`)
    REFERENCES `pos`.`role` (`role_id`),
  CONSTRAINT `account_user_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `pos`.`user` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`administrator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`administrator` (
  `admin_id` INT(11) NOT NULL AUTO_INCREMENT,
  `full_name` VARCHAR(100) NULL DEFAULT NULL,
  `username` VARCHAR(20) NULL DEFAULT NULL,
  `password` VARCHAR(32) NULL DEFAULT NULL,
  `picture` LONGBLOB NULL DEFAULT NULL,
  PRIMARY KEY (`admin_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`category` (
  `category_id` INT(11) NOT NULL AUTO_INCREMENT,
  `category` VARCHAR(50) NOT NULL,
  `expire` BIT(1) NOT NULL DEFAULT b'1',
  PRIMARY KEY (`category_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`complaint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`complaint` (
  `complaint_id` INT(11) NOT NULL AUTO_INCREMENT,
  `complaint` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`complaint_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`csv`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`csv` (
  `PRODUCT_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `COST_PRICE` DOUBLE NULL DEFAULT NULL,
  `CATEGORY_ID` INT(11) NULL DEFAULT NULL,
  `PRODUCT_NAME` TEXT NULL DEFAULT NULL,
  `SELLING_PRICE` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`PRODUCT_ID`),
  UNIQUE INDEX `CSV_PRODUCT_ID_uindex` (`PRODUCT_ID` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`customer` (
  `customer_id` INT(11) NOT NULL AUTO_INCREMENT,
  `customer_name` VARCHAR(100) NOT NULL,
  `customer_phone` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`customer_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 20
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`order` (
  `order_id` INT(11) NOT NULL AUTO_INCREMENT,
  `order_number` VARCHAR(20) NOT NULL,
  `order_date` DATE NOT NULL,
  `total` VARCHAR(20) NULL DEFAULT NULL,
  `customer_id` INT(11) NULL DEFAULT NULL,
  `user_id` INT(11) NOT NULL,
  `order_status` VARCHAR(20) NULL DEFAULT 'PENDING',
  `modified_date` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`order_id`, `order_number`),
  UNIQUE INDEX `order_order_id_uindex` (`order_id` ASC) VISIBLE,
  UNIQUE INDEX `order_cart_no_uindex` (`order_number` ASC) VISIBLE,
  INDEX `FK__SALE__UserID__76619304` (`user_id` ASC) VISIBLE,
  INDEX `order_customer_customer_id_fk` (`customer_id` ASC) VISIBLE,
  CONSTRAINT `order_customer_customer_id_fk`
    FOREIGN KEY (`customer_id`)
    REFERENCES `pos`.`customer` (`customer_id`),
  CONSTRAINT `order_user_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `pos`.`user` (`user_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 83
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`product` (
  `product_id` INT(11) NOT NULL AUTO_INCREMENT,
  `product_name` VARCHAR(50) NULL DEFAULT NULL,
  `category_id` INT(11) NOT NULL,
  `quantity_available` INT(11) NOT NULL DEFAULT '0',
  `cost_price` DECIMAL(4,2) NOT NULL,
  `min_stock_level` INT(11) NULL DEFAULT NULL,
  `selling_price` DECIMAL(4,2) NOT NULL,
  `modified_date` DATETIME NULL DEFAULT NULL,
  `status` BIT(1) NULL DEFAULT b'1',
  PRIMARY KEY (`product_id`),
  INDEX `RefCATEGORY1` (`category_id` ASC) VISIBLE,
  CONSTRAINT `fk_category`
    FOREIGN KEY (`category_id`)
    REFERENCES `pos`.`category` (`category_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`deleted_list_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`deleted_list_item` (
  `del_list_item_id` INT(11) NOT NULL AUTO_INCREMENT,
  `order_id` INT(11) NULL DEFAULT NULL,
  `order_number` VARCHAR(20) NULL DEFAULT NULL,
  `product_id` INT(11) NOT NULL,
  `quantity_sold` INT(11) NOT NULL,
  `price` VARCHAR(20) NULL DEFAULT NULL,
  `modified_date` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`del_list_item_id`),
  INDEX `del_list_item_product_product_id_fk` (`product_id` ASC) VISIBLE,
  INDEX `del_order_id` (`order_id` ASC, `order_number` ASC) VISIBLE,
  CONSTRAINT `del_list_item_order_order_id_order_number_fk`
    FOREIGN KEY (`order_id` , `order_number`)
    REFERENCES `pos`.`order` (`order_id` , `order_number`)
    ON DELETE SET NULL
    ON UPDATE SET NULL,
  CONSTRAINT `del_list_item_product_product_id_fk`
    FOREIGN KEY (`product_id`)
    REFERENCES `pos`.`product` (`product_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 112
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`list_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`list_item` (
  `list_item_id` INT(11) NOT NULL AUTO_INCREMENT,
  `order_id` INT(11) NULL DEFAULT NULL,
  `order_number` VARCHAR(20) NULL DEFAULT NULL,
  `product_id` INT(11) NOT NULL,
  `quantity_sold` INT(11) NOT NULL,
  `price` VARCHAR(20) NULL DEFAULT NULL,
  `modified_date` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`list_item_id`),
  INDEX `list_item_product_product_id_fk` (`product_id` ASC) VISIBLE,
  INDEX `order_id` (`order_id` ASC, `order_number` ASC) VISIBLE,
  CONSTRAINT `list_item_order_order_id_order_number_fk`
    FOREIGN KEY (`order_id` , `order_number`)
    REFERENCES `pos`.`order` (`order_id` , `order_number`)
    ON DELETE SET NULL
    ON UPDATE SET NULL,
  CONSTRAINT `list_item_product_product_id_fk`
    FOREIGN KEY (`product_id`)
    REFERENCES `pos`.`product` (`product_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 125
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`password_reset`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`password_reset` (
  `password_reset_id` INT(11) NOT NULL AUTO_INCREMENT,
  `user_id` INT(11) NOT NULL,
  `status` CHAR(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`password_reset_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`product_inventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`product_inventory` (
  `inventory_id` INT(11) NOT NULL AUTO_INCREMENT,
  `inventory_date` DATE NOT NULL,
  `product_id` INT(11) NOT NULL,
  `quantity_delivered` INT(11) NOT NULL,
  `batch_number` VARCHAR(20) NULL DEFAULT NULL,
  `product_expiry_date` DATE NULL DEFAULT NULL,
  `user_id` INT(11) NOT NULL,
  `status` BIT(1) NULL DEFAULT b'0',
  PRIMARY KEY (`inventory_id`),
  INDEX `RefSTOCK2` (`product_id` ASC) VISIBLE,
  INDEX `RefUSER4` (`user_id` ASC) VISIBLE,
  CONSTRAINT `product_inventory_product_product_id_fk`
    FOREIGN KEY (`product_id`)
    REFERENCES `pos`.`product` (`product_id`),
  CONSTRAINT `product_inventory_user_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `pos`.`user` (`user_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`product_return`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`product_return` (
  `product_return_id` INT(11) NOT NULL AUTO_INCREMENT,
  `product_id` INT(11) NOT NULL,
  `quantity_returned` INT(11) NOT NULL,
  `dat_of_return` DATE NOT NULL,
  `complaint_id` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  PRIMARY KEY (`product_return_id`),
  INDEX `fk_complaint` (`complaint_id` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`setting`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`setting` (
  `setting_id` INT(11) NOT NULL AUTO_INCREMENT,
  `shop_name` VARCHAR(100) NOT NULL,
  `contact_number` VARCHAR(10) NOT NULL,
  `address` VARCHAR(100) NULL DEFAULT NULL,
  `email` VARCHAR(100) NULL DEFAULT NULL,
  `website` VARCHAR(100) NULL DEFAULT NULL,
  PRIMARY KEY (`setting_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `pos`.`user_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`user_log` (
  `user_log_id` INT(11) NOT NULL AUTO_INCREMENT,
  `user_id` INT(11) NOT NULL,
  `role_id` INT(11) NOT NULL,
  `date` DATE NOT NULL,
  `login_time` DATETIME NULL DEFAULT NULL,
  `logout_time` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`user_log_id`),
  INDEX `user_log_role_role_id_fk` (`role_id` ASC) VISIBLE,
  INDEX `user_log_user_user_id_fk` (`user_id` ASC) VISIBLE,
  CONSTRAINT `user_log_role_role_id_fk`
    FOREIGN KEY (`role_id`)
    REFERENCES `pos`.`role` (`role_id`),
  CONSTRAINT `user_log_user_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `pos`.`user` (`user_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 148
DEFAULT CHARACTER SET = latin1;

USE `pos` ;

-- -----------------------------------------------------
-- Placeholder table for view `pos`.`deleted_list_item_view`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`deleted_list_item_view` (`del_list_item_id` INT, `order_id` INT, `order_number` INT, `product_id` INT, `product_name` INT, `quantity_sold` INT, `price` INT, `modified_date` INT);

-- -----------------------------------------------------
-- Placeholder table for view `pos`.`inventory_view`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`inventory_view` (`product_name` INT, `inventory_date` INT, `quantity_delivered` INT, `batch_number` INT, `product_expiry_date` INT, `full_name` INT, `status` INT);

-- -----------------------------------------------------
-- Placeholder table for view `pos`.`list_item_view`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`list_item_view` (`list_item_id` INT, `order_id` INT, `order_number` INT, `product_id` INT, `product_name` INT, `quantity_sold` INT, `price` INT, `modified_date` INT);

-- -----------------------------------------------------
-- Placeholder table for view `pos`.`order_view`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`order_view` (`order_id` INT, `order_number` INT, `order_date` INT, `order_total` INT, `customer_name` INT, `customer_phone` INT, `user_name` INT, `order_status` INT, `modified_date` INT);

-- -----------------------------------------------------
-- Placeholder table for view `pos`.`product_view`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`product_view` (`product_id` INT, `product_name` INT, `category` INT, `quantity_available` INT, `cost_price` INT, `selling_price` INT, `min_stock_level` INT, `modified_date` INT, `status` INT);

-- -----------------------------------------------------
-- Placeholder table for view `pos`.`user_log_view`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`user_log_view` (`user_id` INT, `full_name` INT, `role` INT, `date` INT, `login_time` INT, `logout_time` INT);

-- -----------------------------------------------------
-- Placeholder table for view `pos`.`user_view`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pos`.`user_view` (`user_id` INT, `full_name` INT, `gender` INT, `date_of_birth` INT, `date_of_employment` INT, `role` INT, `phone_number` INT, `address` INT, `username` INT, `picture` INT, `status` INT, `modified_date` INT);

-- -----------------------------------------------------
-- View `pos`.`deleted_list_item_view`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pos`.`deleted_list_item_view`;
USE `pos`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `pos`.`deleted_list_item_view` AS select `a`.`del_list_item_id` AS `del_list_item_id`,`a`.`order_id` AS `order_id`,`a`.`order_number` AS `order_number`,`b`.`product_id` AS `product_id`,`b`.`product_name` AS `product_name`,`a`.`quantity_sold` AS `quantity_sold`,`a`.`price` AS `price`,`a`.`modified_date` AS `modified_date` from (`pos`.`deleted_list_item` `a` join `pos`.`product` `b` on((`b`.`product_id` = `a`.`product_id`))) order by `a`.`del_list_item_id`;

-- -----------------------------------------------------
-- View `pos`.`inventory_view`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pos`.`inventory_view`;
USE `pos`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `pos`.`inventory_view` AS select `b`.`product_name` AS `product_name`,`a`.`inventory_date` AS `inventory_date`,`a`.`quantity_delivered` AS `quantity_delivered`,`a`.`batch_number` AS `batch_number`,`a`.`product_expiry_date` AS `product_expiry_date`,concat(`c`.`first_name`,' ',`c`.`last_name`) AS `full_name`,`a`.`status` AS `status` from ((`pos`.`product_inventory` `a` left join `pos`.`product` `b` on((`a`.`product_id` = `b`.`product_id`))) join `pos`.`user` `c` on((`a`.`user_id` = `c`.`user_id`)));

-- -----------------------------------------------------
-- View `pos`.`list_item_view`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pos`.`list_item_view`;
USE `pos`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `pos`.`list_item_view` AS select `a`.`list_item_id` AS `list_item_id`,`a`.`order_id` AS `order_id`,`a`.`order_number` AS `order_number`,`b`.`product_id` AS `product_id`,`b`.`product_name` AS `product_name`,`a`.`quantity_sold` AS `quantity_sold`,`a`.`price` AS `price`,`a`.`modified_date` AS `modified_date` from (`pos`.`list_item` `a` join `pos`.`product` `b` on((`b`.`product_id` = `a`.`product_id`))) order by `a`.`list_item_id`;

-- -----------------------------------------------------
-- View `pos`.`order_view`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pos`.`order_view`;
USE `pos`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `pos`.`order_view` AS select `a`.`order_id` AS `order_id`,`a`.`order_number` AS `order_number`,`a`.`order_date` AS `order_date`,`a`.`total` AS `order_total`,`b`.`customer_name` AS `customer_name`,`b`.`customer_phone` AS `customer_phone`,concat(`c`.`first_name`,' ',`c`.`last_name`) AS `user_name`,`a`.`order_status` AS `order_status`,`a`.`modified_date` AS `modified_date` from ((`pos`.`order` `a` left join `pos`.`customer` `b` on((`b`.`customer_id` = `a`.`customer_id`))) join `pos`.`user` `c` on((`c`.`user_id` = `a`.`user_id`))) order by `a`.`order_id`;

-- -----------------------------------------------------
-- View `pos`.`product_view`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pos`.`product_view`;
USE `pos`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `pos`.`product_view` AS select `a`.`product_id` AS `product_id`,`a`.`product_name` AS `product_name`,`b`.`category` AS `category`,`a`.`quantity_available` AS `quantity_available`,`a`.`cost_price` AS `cost_price`,`a`.`selling_price` AS `selling_price`,`a`.`min_stock_level` AS `min_stock_level`,`a`.`modified_date` AS `modified_date`,`a`.`status` AS `status` from (`pos`.`product` `a` left join `pos`.`category` `b` on((`a`.`category_id` = `b`.`category_id`)));

-- -----------------------------------------------------
-- View `pos`.`user_log_view`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pos`.`user_log_view`;
USE `pos`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `pos`.`user_log_view` AS select `a`.`user_id` AS `user_id`,concat(`c`.`first_name`,' ',`c`.`last_name`) AS `full_name`,`b`.`role` AS `role`,`a`.`date` AS `date`,`a`.`login_time` AS `login_time`,`a`.`logout_time` AS `logout_time` from ((`pos`.`user_log` `a` join `pos`.`role` `b` on((`b`.`role_id` = `a`.`role_id`))) join `pos`.`user` `c` on((`a`.`user_id` = `c`.`user_id`)));

-- -----------------------------------------------------
-- View `pos`.`user_view`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pos`.`user_view`;
USE `pos`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `pos`.`user_view` AS select `a`.`user_id` AS `user_id`,concat(`a`.`first_name`,' ',`a`.`last_name`) AS `full_name`,`a`.`gender` AS `gender`,`a`.`date_of_birth` AS `date_of_birth`,`a`.`date_of_employment` AS `date_of_employment`,`b`.`role` AS `role`,`a`.`phone_number` AS `phone_number`,`a`.`address` AS `address`,`c`.`username` AS `username`,`a`.`picture` AS `picture`,`a`.`status` AS `status`,`a`.`modified_date` AS `modified_date` from ((`pos`.`user` `a` join `pos`.`role` `b` on((`b`.`role_id` = `a`.`role_id`))) join `pos`.`account` `c` on((`a`.`user_id` = `c`.`user_id`)));
USE `pos`;

DELIMITER $$
USE `pos`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `pos`.`list_item_AFTER_DELETE`
AFTER DELETE ON `pos`.`list_item`
FOR EACH ROW
BEGIN
UPDATE
			product SET
				quantity_available = product.quantity_available + OLD.quantity_sold, modified_date = OLD.modified_date
			WHERE
				product.product_id = OLD.product_id;
END$$

USE `pos`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `pos`.`list_item_AFTER_INSERT`
AFTER INSERT ON `pos`.`list_item`
FOR EACH ROW
BEGIN
UPDATE
			product SET
				quantity_available = product.quantity_available - NEW.quantity_sold, modified_date = NEW.modified_date
			WHERE
				product.product_id = NEW.product_id;

END$$

USE `pos`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `pos`.`list_item_BEFORE_DELETE`
BEFORE DELETE ON `pos`.`list_item`
FOR EACH ROW
BEGIN
INSERT INTO deleted_list_item (order_id, order_number, product_id, quantity_sold, price, modified_date) 
VALUES (OLD.order_id, OLD.order_number, OLD.product_id, OLD.quantity_sold, OLD.price, OLD.modified_date);
END$$

USE `pos`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `pos`.`product_inventory_AFTER_INSERT`
AFTER INSERT ON `pos`.`product_inventory`
FOR EACH ROW
BEGIN
UPDATE
			product SET
				quantity_available = product.quantity_available + NEW.quantity_delivered
			WHERE
				product.product_id = NEW.product_id;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
